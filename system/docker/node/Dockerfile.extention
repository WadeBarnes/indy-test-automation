FROM fauust/docker-systemd:ubuntu-20.04

ARG DEBIAN_FRONTEND=noninteractive

ARG uid=1000
ARG user=indy


RUN apt-get update -y && apt-get install -y \
    apt-utils\
    git\
    ca-certificates \
    ssh\
    gnupg \
    apt-transport-https

# Bionic-security-main for libssl1.0.0
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32 \
    && echo "deb http://security.ubuntu.com/ubuntu bionic-security main"  >> /etc/apt/sources.list

# sovrin repo
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CE7709D068DB5E88 \
    && echo "deb https://repo.sovrin.org/deb bionic master" >> /etc/apt/sources.list

# Hyperledger Artifactory
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9692C00E657DDE61 \
    && echo "deb https://hyperledger.jfrog.io/artifactory/indy focal dev rc master" >> /etc/apt/sources.list \
    && printf '%s\n%s\n%s\n' 'Package: *' 'Pin: origin hyperledger.jfrog.io' 'Pin-Priority: 1001' >> /etc/apt/preferences

# Sovrin Artifactory
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3BC8C2DD662F1C45 \
    && echo "deb https://sovrin.jfrog.io/artifactory/deb focal dev rc master" >> /etc/apt/sources.list

COPY * /

ARG EXTENTION_DEB
RUN : ${EXTENTION_DEB:?"EXTENTION_DEB must be provided"}
ENV EXTENTION_DEB=${EXTENTION_DEB}
RUN apt-get update -y && \
    bash ./getDeps.sh ${EXTENTION_DEB} && \
    aptStr=$(cat /tmp/aptStr) && \
    echo "Installing dependancies:" && \
    echo ${aptStr} && \
    echo && \
    apt-get update -y && apt-get install -y ${aptStr} \
    # fix missing path to libursa
    && ln -s /usr/lib/ursa/libursa.so /usr/lib/libursa.so

RUN extention_package=$(find ./ -name "$EXTENTION_DEB" | head -n 1); \
    echo "Installing Extension ${extention_package} ..."; \
    dpkg -i "${extention_package}";

# network config
RUN echo " " >> /etc/indy/indy_config.py \
    && echo "NETWORK_NAME = 'sandbox'" >> /etc/indy/indy_config.py \
    && echo " " >> /etc/indy/indy_config.py \
    && echo "logLevel = 0" >> /etc/indy/indy_config.py \
    && echo " " >> /etc/indy/indy_config.py

# Server side ssh configuration
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
COPY test_key.pub /root/.ssh/authorized_keys
RUN chmod 700 /root/.ssh && \
    chmod 600 /root/.ssh/authorized_keys

