name: indy-test-automation
on: 
  # push:
  #   branches: [sovrin]
  workflow_call:
    inputs:
      ubuntuVersion:
        description: 'Version of Ubuntu base image'
        required: true
        type: string
        default: 'ubuntu-2004'
      libsovtokenJSON:
        description: "JSON encoded libsovtoken variables: install, version"
        required: true
        type: string
        default: "{\"install\": \"yes\",  \"version\": \"1.0.5\"}"
      tokenPluginJSON:
        description: "JSON encoded token plugin variables: install, sovtokenVersion, sovtokenfeesVersion"
        required: true
        type: string
        default: "{\"install\":\"yes\", \"sovtokenVersion\": \"1.2.0-dev1666268500\", \"sovtokenfeesVersion\":\"1.2.0-dev1666268500\"}"
      sovrinJSON:
        description: "JSON encoded sovrin variables: install"
        required: true
        type: string
        default: "{ \"install\": \"yes\"}"
      indyJSON:
        description: "JSON encoded indy variables: nodeVersion, plenumVersion, ursaVersion, pyzmqVersion"
        required: true
        type: string
        default: "{ \"nodeVersion\": \"1.13.2~rc3\", \"plenumVersion\" : \"1.13.1~rc2\", \"ursaVersion\": \"0.3.2-1\", \"pyzmqVersion\" : \"22.3.0\"}"
      libIndyVersion: 
        description: 'Version of Libindy'
        required: true
        type: string
        default: "1.15.0~1625-bionic"
      testAutomationBranch:
        description: "Branch of Indy-Test-Automation to use"
        required: false
        type: string
        default: "sovrin"
  workflow_dispatch:
    inputs:
      ubuntuVersion:
        description: 'Version of Ubuntu base image'
        required: true
        default: 'ubuntu-2004'
      libsovtokenJSON:
        description: "JSON encoded libsovtoken variables: install, version"
        required: true
        default: "{\"install\": \"yes\",  \"version\": \"1.0.5\"}"
      tokenPluginJSON:
        desription: "JSON encoded token plugin variables: install, sovtokenVersion, sovtokenfessVersion"
        required: true
        default: "{\"install\":\"yes\", \"sovtokenVersion\": \"1.2.0-dev1666268500\", \"sovtokenfeesVersion\":\"1.2.0-dev1666268500\", }"
      sovrinJSON:
        description: "JSON encoded sovrin variables: install"
        required: true
        default: "{ \"install\": \"yes\"}"
      indyJSON:
        description: "JSON encoded indy variables: nodeVersion, plenumVersion, ursaVersion, pyzmqVersion"
        required: true
        default: "{ \"nodeVersion\": \"1.13.2~rc3\", \"plenumVersion\" : \"1.13.1~rc2\", \"ursaVersion\": \"0.3.2-1\", \"pyzmqVersion\" : \"22.3.0\"}"
      libIndyVersion: 
        description: 'Version of Libindy'
        required: true
        default: "1.15.0~1625-bionic"
      testAutomationBranch:
        description: "Branch of Indy-Test-Automation to use"
        required: false
        default: "sovrin"

env:
  INPUT_UBUNTUVERSION: ${{ inputs.ubuntuVersion }}
  
  INPUT_LIBSOVTOKEN_INSTALL: ${{ fromJSON(inputs.libsovtokenJSON).install }} 
  INPUT_LIBSOVTOKEN_VERSION: ${{ fromJSON(inputs.libsovtokenJSON).version }}
  
  INPUT_TOKEN_PLUGINS_INSTALL: ${{ fromJSON(inputs.tokenPluginJSON).install }} 
  INPUT_SOVTOKEN_VERSION: ${{ fromJSON(inputs.tokenPluginJSON).sovtokenVersion }}
  INPUT_SOVTOKENFEES_VERSION: ${{ fromJSON(inputs.tokenPluginJSON).sovtokenFeesVersion }}

  INPUT_SOVRIN_INSTALL: ${{ fromJSON(inputs.sovrinJSON).install }}

  INPUT_NODEVERSION: ${{ fromJSON(inputs.indyJSON).nodeVersion }}
  INPUT_PLENUMVERSION: ${{ fromJSON(inputs.indyJSON).plenumVersion }}
  INPUT_URSAVERSION: ${{ fromJSON(inputs.indyJSON).ursaVersion }}
  INPUT_PYZMQVERSION: ${{ fromJSON(inputs.indyJSON).pyzmqVersion }}

  INPUT_LIBINDYVERSION: ${{ inputs.libIndyVersion }}
  
  TEST_AUTOMATION_BRANCH: ${{ inputs.testAutomationBranch }}  

jobs:
  workflow-setup:
    name: Initialize Workflow
    runs-on: ubuntu-20.04
    outputs:
      GITHUB_REPOSITORY_NAME: ${{ steps.repository-name.outputs.lowercase }}
      DIND_BUILD_ARG: ${{ steps.cache.outputs.DIND_BUILD_ARG}}
    steps:
      - name: Convert the GitHub repository name to lowercase
        id: repository-name
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Set outputs
        id: cache
        run: |
          # Set variables according to version of ubuntu
          if [[ "${{ env.INPUT_UBUNTUVERSION }}" == "ubuntu-1604" ]]; then
            echo "DIND_BUILD_ARG=16.04" >> $GITHUB_OUTPUT
            echo "distribution=xenial" >> $GITHUB_OUTPUT
          fi
          if [[ "${{ env.INPUT_UBUNTUVERSION }}" == "ubuntu-2004" ]]; then
            echo "DIND_BUILD_ARG=20.04" >> $GITHUB_OUTPUT
            echo "distribution=focal" >> $GITHUB_OUTPUT
          fi
          
  dind-image:
    name: Create DinD Image
    needs: workflow-setup
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      DIND_BUILD_ARG: ${{ needs.workflow-setup.outputs.DIND_BUILD_ARG }}
    steps:
      - name: Git checkout teracyhq/docker-files
        uses: actions/checkout@v3
        with:
          repository: teracyhq/docker-files
            
      - name: Prepare image labels and tags
        id: prep
        shell: bash
        run: |
          DOCKER_IMAGE=ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/dind
          TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${{ env.INPUT_UBUNTUVERSION }}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Log into the GitHub Container Registry
        if: steps.cache-image.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: ./ubuntu/base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            UBUNTU_VERSION=${{ env.DIND_BUILD_ARG }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  node-image:
    name: Create Node Image
    needs: workflow-setup
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Prepare image labels and tags
        if: steps.cache-image.outputs.cache-hit != 'true'
        id: prep
        shell: bash
        run: |
          DOCKER_IMAGE=ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/node-${{ env.INPUT_UBUNTUVERSION }}
          # TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${{ env.INPUT_UBUNTUVERSION }}"
          TAGS="${DOCKER_IMAGE}:latest"
          echo "tags=${TAGS}" >>  $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >>  $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        if: steps.cache-image.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx
      - name: Download Pipeline sovrin.deb artifact
        uses: actions/download-artifact@v3
        with:
          name: sovrin.deb
          path: ./system/docker/node/
      - name: LS DEBUG
        run: ls ./system/docker/node/
      - name: Build and cache image
        if: steps.cache-image.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./system/docker/node
          file: ./system/docker/node/Dockerfile.${{ env.INPUT_UBUNTUVERSION }}
          push: false
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            INDY_NODE_VERSION=${{ env.INPUT_NODEVERSION }}
            INDY_PLENUM_VERSION=${{ env.INPUT_PLENUMVERSION }}
            TOKEN_PLUGINS_INSTALL=${{ env.INPUT_TOKEN_PLUGINS_INSTALL }}
            SOVRIN_INSTALL=${{ env.INPUT_SOVRIN_INSTALL }}
            SOVTOKEN_VERSION=${{ env.INPUT_SOVTOKEN_VERSION }}
            SOVTOKENFEES_VERSION=${{ env.INPUT_SOVTOKENFEES_VERSION }}
            URSA_VERSION=${{ env.INPUT_URSAVERSION }}
            PYTHON3_PYZMQ_VERSION=${{ env.INPUT_PYZMQVERSION }}
          outputs: type=docker,dest=/tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Upload node docker image artifacts
        uses: actions/upload-artifact@v3
        with:
          name: node_image
          path: /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          retention-days: 1
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  client-image:
    name: Create Client Image
    needs: [ workflow-setup, dind-image ]
    runs-on: ubuntu-20.04
    env: 
      CACHE_KEY_CLIENT: ${{ needs.workflow-setup.outputs.CACHE_KEY_CLIENT }}
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      DIND_BUILD_ARG: ${{ needs.workflow-setup.outputs.DIND_BUILD_ARG }}
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Prepare image labels and tags
        id: prep
        shell: bash
        run: |
          DOCKER_IMAGE=ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/client
          TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${{ env.INPUT_UBUNTUVERSION }}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx
          
      - name: Build and cache image
        uses: docker/build-push-action@v3
        with:
          context: ./system/docker/client/
          file: ./system/docker/client/Dockerfile.${{ env.INPUT_UBUNTUVERSION }}
          push: false
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            LIBINDY_VERSION=${{ env.INPUT_LIBINDYVERSION}}
            DIND_CONTAINER_REGISTRY=ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}
            DIND_IMAGE_NAME=dind:${{ env.INPUT_UBUNTUVERSION }}
            LIBSOVTOKEN_INSTALL=${{ env.INPUT_LIBSOVTOKEN_INSTALL }}
            LIBSOVTOKEN_VERSION=${{ env.INPUT_LIBSOVTOKEN_VERSION }}
          outputs: type=docker,dest=/tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Upload client docker image artifacts
        uses: actions/upload-artifact@v3
        with:
          name: client_image
          path: /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          retention-days: 1
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache                     

  ### 1 step in workflow  per test
  ### The tests rely on docker in docker with the fixed network name and fixed IP addresses. 
  ### That's why the tests cannot be run in matrix mode because all tests would share the same host and same docker engine.
  test_consensus:
    name: test_consensus
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_consensus
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_consensus.py "-l -v --junit-xml=test_consensus-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_consensus Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_consensus.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_consensus
          path: test-result-indy-test-automation-test_consensus.txt
          retention-days: 5

  test_freshness:
    name: test_freshness
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_freshness
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_freshness.py "-l -v --junit-xml=test_freshness-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_freshness Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_freshness.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_freshness
          path: test-result-indy-test-automation-test_freshness.txt
          retention-days: 5

  test_ledger:
    name: test_ledger
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_ledger
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_ledger.py "-l -v --junit-xml=test_ledger-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_ledger Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_ledger.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_ledger
          path: test-result-indy-test-automation-test_ledger.txt
          retention-days: 5

  test_libsovtoken:
    name: test_libsovtoken
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_libsovtoken
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_libsovtoken.py "-l -v --junit-xml=test_libsovtoken-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_libsovtoken Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_libsovtoken.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_libsovtoken
          path: test-result-indy-test-automation-test_libsovtoken.txt
          retention-days: 5

  test_off_ledger_signature:
    name: test_off_ledger_signature
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_off_ledger_signature
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_off_ledger_signature.py "-l -v --junit-xml=test_off_ledger_signature-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_off_ledger_signature Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_off_ledger_signature.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_off_ledger_signature
          path: test-result-indy-test-automation-test_off_ledger_signature.txt
          retention-days: 5

  test_roles:
    name: test_roles
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_roles
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_roles.py "-l -v --junit-xml=test_roles-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_roles Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_roles.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_roles
          path: test-result-indy-test-automation-test_roles.txt
          retention-days: 5
  test_state_proof:
    name: test_state_proof
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_state_proof
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_state_proof.py "-l -v --junit-xml=test_state_proof-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_state_proof Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_state_proof.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_state_proof
          path: test-result-indy-test-automation-test_state_proof.txt
          retention-days: 5

  test_vc:
    name: test_vc
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: test_vc
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/test_vc.py "-l -v --junit-xml=test_vc-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: test_vc Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.test_vc.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-test_vc
          path: test-result-indy-test-automation-test_vc.txt
          retention-days: 5

  TestAdHocSuite:
    name: TestAdHocSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAdHocSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAdHocSuite.py "-l -v --junit-xml=TestAdHocSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAdHocSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAdHocSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAdHocSuite
          path: test-result-indy-test-automation-TestAdHocSuite.txt
          retention-days: 5

  TestAuditSuite:
    name: TestAuditSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuditSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuditSuite.py "-l -v --junit-xml=TestAuditSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuditSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuditSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuditSuite
          path: test-result-indy-test-automation-TestAuditSuite.txt
          retention-days: 5          

  TestAuthMapAttribSuite:
    name: TestAuthMapAttribSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapAttribSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapAttribSuite.py "-l -v --junit-xml=TestAuthMapAttribSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapAttribSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapAttribSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapAttribSuite
          path: test-result-indy-test-automation-TestAuthMapAttribSuite.txt
          retention-days: 5

  TestAuthMapCredDefSuite:
    name: TestAuthMapCredDefSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapCredDefSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapCredDefSuite.py "-l -v --junit-xml=TestAuthMapCredDefSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapCredDefSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapCredDefSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapCredDefSuite
          path: test-result-indy-test-automation-TestAuthMapCredDefSuite.txt
          retention-days: 5

  TestAuthMapMiscSuite:
    name: TestAuthMapMiscSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapMiscSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapMiscSuite.py "-l -v --junit-xml=TestAuthMapMiscSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapMiscSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapMiscSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapMiscSuite
          path: test-result-indy-test-automation-TestAuthMapMiscSuite.txt
          retention-days: 5

  TestAuthMapNymSuite:
    name: TestAuthMapNymSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapNymSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapNymSuite.py "-l -v --junit-xml=TestAuthMapNymSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapNymSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapNymSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapNymSuite
          path: test-result-indy-test-automation-TestAuthMapNymSuite.txt
          retention-days: 5

  TestAuthMapPluginsSuite:
    name: TestAuthMapPluginsSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapPluginsSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapPluginsSuite.py "-l -v --junit-xml=TestAuthMapPluginsSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapPluginsSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapPluginsSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapPluginsSuite
          path: test-result-indy-test-automation-TestAuthMapPluginsSuite.txt
          retention-days: 5

  TestAuthMapRevocRegDefSuite:
    name: TestAuthMapRevocRegDefSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapRevocRegDefSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapRevocRegDefSuite.py "-l -v --junit-xml=TestAuthMapRevocRegDefSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapRevocRegDefSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapRevocRegDefSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapRevocRegDefSuite
          path: test-result-indy-test-automation-TestAuthMapRevocRegDefSuite.txt
          retention-days: 5

  TestAuthMapRevocRegEntrySuite:
    name: TestAuthMapRevocRegEntrySuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapRevocRegEntrySuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapRevocRegEntrySuite.py "-l -v --junit-xml=TestAuthMapRevocRegEntrySuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapRevocRegEntrySuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapRevocRegEntrySuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapRevocRegEntrySuite
          path: test-result-indy-test-automation-TestAuthMapRevocRegEntrySuite.txt
          retention-days: 5

  TestAuthMapSchemaSuite:
    name: TestAuthMapSchemaSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapSchemaSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapSchemaSuite.py "-l -v --junit-xml=TestAuthMapSchemaSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapSchemaSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapSchemaSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapSchemaSuite
          path: test-result-indy-test-automation-TestAuthMapSchemaSuite.txt
          retention-days: 5

  TestAuthMapUpgradeSuite:
    name: TestAuthMapUpgradeSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestAuthMapUpgradeSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestAuthMapUpgradeSuite.py "-l -v --junit-xml=TestAuthMapUpgradeSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestAuthMapUpgradeSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestAuthMapUpgradeSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestAuthMapUpgradeSuite
          path: test-result-indy-test-automation-TestAuthMapUpgradeSuite.txt
          retention-days: 5

  TestCatchUpSuite:
    name: TestCatchUpSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestCatchUpSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestCatchUpSuite.py "-l -v --junit-xml=TestCatchUpSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestCatchUpSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestCatchUpSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestCatchUpSuite
          path: test-result-indy-test-automation-TestCatchUpSuite.txt
          retention-days: 5

  TestCatchUpSuiteExtended:
    name: TestCatchUpSuiteExtended
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestCatchUpSuiteExtended
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestCatchUpSuiteExtended.py "-l -v --junit-xml=TestCatchUpSuiteExtended-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestCatchUpSuiteExtended Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestCatchUpSuiteExtended.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestCatchUpSuiteExtended
          path: test-result-indy-test-automation-TestCatchUpSuiteExtended.txt
          retention-days: 5

  TestConsensusSuite:
    name: TestConsensusSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestConsensusSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestConsensusSuite.py "-l -v --junit-xml=TestConsensusSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestConsensusSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestConsensusSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestConsensusSuite
          path: test-result-indy-test-automation-TestConsensusSuite.txt
          retention-days: 5

  TestCatchUpSuiteExtended:
    name: TestCatchUpSuiteExtended
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestCatchUpSuiteExtended
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestCatchUpSuiteExtended.py "-l -v --junit-xml=TestCatchUpSuiteExtended-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestCatchUpSuiteExtended Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestCatchUpSuiteExtended.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestCatchUpSuiteExtended
          path: test-result-indy-test-automation-TestCatchUpSuiteExtended.txt
          retention-days: 5

  TestConsensusSuite:
    name: TestConsensusSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestConsensusSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestConsensusSuite.py "-l -v --junit-xml=TestConsensusSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestConsensusSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestConsensusSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestConsensusSuite
          path: test-result-indy-test-automation-TestConsensusSuite.txt
          retention-days: 5

  TestEndorsersSuite:
    name: TestEndorsersSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestEndorsersSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestEndorsersSuite.py "-l -v --junit-xml=TestEndorsersSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestEndorsersSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestEndorsersSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestEndorsersSuite
          path: test-result-indy-test-automation-TestEndorsersSuite.txt
          retention-days: 5

  TestFeesSuite:
    name: TestFeesSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestFeesSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestFeesSuite.py "-l -v --junit-xml=TestFeesSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestFeesSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestFeesSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestFeesSuite
          path: test-result-indy-test-automation-TestFeesSuite.txt
          retention-days: 5

  TestLedgerSuite:
    name: TestLedgerSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestLedgerSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestLedgerSuite.py "-l -v --junit-xml=TestLedgerSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestLedgerSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestLedgerSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestLedgerSuite
          path: test-result-indy-test-automation-TestLedgerSuite.txt
          retention-days: 5

  TestMultiSigSuite:
    name: TestMultiSigSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestMultiSigSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestMultiSigSuite.py "-l -v --junit-xml=TestMultiSigSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestMultiSigSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestMultiSigSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestMultiSigSuite
          path: test-result-indy-test-automation-TestMultiSigSuite.txt
          retention-days: 5

  TestProductionSuite:
    name: TestProductionSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestProductionSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestProductionSuite.py "-l -v --junit-xml=TestProductionSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestProductionSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestProductionSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestProductionSuite
          path: test-result-indy-test-automation-TestProductionSuite.txt
          retention-days: 5

  TestTAASuite:
    name: TestTAASuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestTAASuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestTAASuite.py "-l -v --junit-xml=TestTAASuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestTAASuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestTAASuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestTAASuite
          path: test-result-indy-test-automation-TestTAASuite.txt
          retention-days: 5

  TestViewChangeSuite:
    name: TestViewChangeSuite
    needs: [ workflow-setup, node-image, client-image]
    runs-on: ubuntu-20.04
    env: 
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }} 
    steps:
      - name: Git checkout hyperledger/indy-test-automation
        uses: actions/checkout@v3
        with:
          repository: pschlarb/indy-test-automation
          ref: ${{ env.TEST_AUTOMATION_BRANCH }}

      - name: Create docker network
        run: |
          docker network create --subnet="10.0.0.0/24" "indy-test-automation-network"

      - name: Download client artifact
        uses: actions/download-artifact@v3
        with:
          name: client_image
          path: /tmp

      - name: Download node artifact
        uses: actions/download-artifact@v3
        with:
          name: node_image
          path: /tmp

      - name: Load client and node image
        run: |
          docker load --input /tmp/client_image_${{ env.INPUT_UBUNTUVERSION }}.tar
          docker load --input /tmp/node_image_${{ env.INPUT_UBUNTUVERSION }}.tar

      - name: test
        id: TestViewChangeSuite
        run: |
          cd ./system/docker
          UBUNTU_VERSION="${{ env.INPUT_UBUNTUVERSION }}" IMAGE_REPOSITORY="ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/" CLIENT_IMAGE="client:${{ env.INPUT_UBUNTUVERSION }}" NODE_IMAGE="node-${{ env.INPUT_UBUNTUVERSION }}" ./run.sh system/indy-node-tests/TestViewChangeSuite.py "-l -v --junit-xml=TestViewChangeSuite-report.xml --payments" indy-test-automation-network

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        continue-on-error: true
        with:
          check_name: TestViewChangeSuite Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: "*-report.xml"

      - name: Upload Detailed Test Failure Results
        # The test runner only emits the detailed test results if the tests fail.
        if: (steps.TestViewChangeSuite.outcome == 'failure') && failure()
        uses: actions/upload-artifact@v3
        with:
          name: detailed-test-result-TestViewChangeSuite
          path: test-result-indy-test-automation-TestViewChangeSuite.txt
          retention-days: 5
